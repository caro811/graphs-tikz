% Graphs for tikz
% https://github.com/caro811/graphs-tikz

%--------------------------------------------------------------------------------------------------------------------------------------------------
% Identification

\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{graphs-tikz}[2021/03/11 graphs-tikz package]
%--------------------------------------------------------------------------------------------------------------------------------------------------

%--------------------------------------------------------------------------------------------------------------------------------------------------
% Required packages

%\RequirePackage{ifthen}

\RequirePackage{rotating}

\RequirePackage{tikz}
\usetikzlibrary{patterns}
%--------------------------------------------------------------------------------------------------------------------------------------------------

%--------------------------------------------------------------------------------------------------------------------------------------------------
% Options passed to the package

%\DeclareOption{blue}{\renewcommand{\wordcolour}{mybluecolour}}

\DeclareOption*{\PackageWarning{graphs-tikz}{Unknown ‘\CurrentOption’}}

\ProcessOptions\relax
%--------------------------------------------------------------------------------------------------------------------------------------------------

%--------------------------------------------------------------------------------------------------------------------------------------------------
% Body

%---------------------------------------------------------------------------------------------------
% Vertices

% \vertex[(optional) color]{x}{y}{name}
\newcommand{\vertex}[4][black]{
    \draw[#1, fill=#1, inner sep=0pt] (#2, #3) circle (0.075) node(#4){};
}

% Vertex (unlabelled) of medium size
% \vertexMedium[optional arguments (for example, color, pattern)]{x}{y}{name}
\newcommand{\vertexMedium}[4][]{
	\path (#2,#3) node[draw, circle, #1, minimum width=15pt](#4){};
}

% With label inside
% \vertexLabelledInside[optional arguments (for example, color, pattern)]{x}{y}{name}{label}
\newcommand{\vertexLabelledInside}[5][]{
	\path (#2,#3) node[draw, circle, #1, minimum width=25pt](#4){#5};
}

% Only label, outside
% \vertexLabel[(optional) position]{name}{label}
% position: below, above, left, right, and combinations (below left, etc.)
\newcommand{\vertexLabel}[3][above]{
    \path (#2) node[#1]{#3};
}
%---------------------------------------------------------------------------------------------------

%---------------------------------------------------------------------------------------------------
% Edges

% Straight
% \edge[optional parameters (such as "color=red, dashed")]{nameVertex1}{nameVertex2}
\newcommand{\edge}[3][]{
	\draw[#1] (#2) -- (#3);
}

% Curved
% \edgeCurved[optional parameters (such as "color=red, dashed")]{nameVertex1}{nameVertex2}{angleOut}{angleIn}
\newcommand{\edgeCurved}[5][]{
	\draw[#1] (#2) to[out=#4, in=#5] (#3);
}

% Only label
% \edgeLabel[(optional) position]{nameVertex1}{nameVertex2}{label}
\newcommand{\edgeLabel}[4][above]{
	\path (#2) -- (#3) node[midway, #1]{#4};
}
%---------------------------------------------------------------------------------------------------

%---------------------------------------------------------------------------------------------------
% Join
% \join[optional parameters (such as "color=red, dashed")]{name graph 1}{n1}{name graph 2}{n2}
\newcommand{\join}[5][]{
	\foreach \joinI in {1,...,#3} {
		\foreach \joinJ in {1,...,#5} {
			\edge[#1]{#2\joinI}{#4\joinJ};
		}
	}
}
%---------------------------------------------------------------------------------------------------

%---------------------------------------------------------------------------------------------------
% Vertex of a regular polygon
% \vertexRegularPolygon[(optional) color]{x of center}{y of center}{scale}{n}{position of vertex}{name}
\newcommand{\vertexRegularPolygon}[7][]{
	\vertex[#1]
	{ { (#2) + (#4) * -cos(deg(6.283*(#6 - 1)/(#5)-(1.571+3.142/(#5)))) } }
	{ { (#3) + (#4) * sin(deg(6.283*(#6 - 1)/(#5)-(1.571+3.142/(#5)))) } }
	{#7};
}
%---------------------------------------------------------------------------------------------------

%---------------------------------------------------------------------------------------------------
% Cycle
% \cycle[(optional) color]{x of center}{y of center}{scale}{n}{name}
\newcommand{\cycle}[6][]{
	\foreach \cycleI in {1,...,#5} {
		\vertexRegularPolygon[#1]
						{#2}{#3}
						{#4}
						{#5}
						{\cycleI}
						{#6\cycleI}
						{};
	}

	\foreach \cycleI in {2,...,#5} {
		\pgfmathtruncatemacro{\cycleIminusOne}{\cycleI - 1};

		\edge[#1]{#6\cycleI}{#6\cycleIminusOne};
	}
	\pgfmathtruncatemacro{\cycleN}{#5};
	\pgfmathtruncatemacro{\cycleOne}{1};
	\edge[#1]{#6\cycleN}{#6\cycleOne};
}
%---------------------------------------------------------------------------------------------------

%---------------------------------------------------------------------------------------------------
% Complete
% \complete[(optional) color]{x of center}{y of center}{scale}{n}{name}
\newcommand{\complete}[6][]{
	\foreach \completeI in {1,...,#5} {
		\vertexRegularPolygon[#1]
						{#2}{#3}
						{#4}
						{#5}
						{\completeI}
						{#6\completeI}
						{};
	}

	\foreach \completeI in {2,...,#5} {
		\pgfmathtruncatemacro{\completeIminusOne}{\completeI - 1};

		\foreach \completeJ in {1,...,\completeIminusOne} {
			\edge[#1]{#6\completeI}{#6\completeJ};
		}
	}
}
%---------------------------------------------------------------------------------------------------

%---------------------------------------------------------------------------------------------------
% Spiders with no head (H = \emptyset)

% Thin spider
% \thinSpider[(optional) color]{x of center}{y of center}{scale}{n}{name}
\newcommand{\thinSpider}[6][]{
	\foreach \thinSpiderI in {1,...,#5} {
		\vertexRegularPolygon[#1]
						{#2}{#3}
						{#4}
						{#5}
						{\thinSpiderI}
						{#6c\thinSpiderI}
						{};

		\vertexRegularPolygon[#1]
						{#2}{#3}
						{2*(#4)}
						{#5}
						{\thinSpiderI}
						{#6s\thinSpiderI}
						{};

		\edge[#1]{#6c\thinSpiderI}{#6s\thinSpiderI};
	}

	\foreach \thinSpiderI in {2,...,#5} {
		\pgfmathtruncatemacro{\thinSpiderIminusOne}{\thinSpiderI - 1};

		\foreach \thinSpiderJ in {1,...,\thinSpiderIminusOne} {
			\edge[#1]{#6c\thinSpiderI}{#6c\thinSpiderJ};
		}
	}
}

% Fat spider
% \fatSpider[(optional) color]{x of center}{y of center}{scale}{n}{name}
\newcommand{\fatSpider}[6][]{
	\foreach \fatSpiderI in {1,...,#5} {
		\vertexRegularPolygon[#1]
						{#2}{#3}
						{#4}
						{#5}
						{\fatSpiderI}
						{#6c\fatSpiderI}
						{};

		\vertexRegularPolygon[#1]
						{#2}{#3}
						{2*(#4)}
						{#5}
						{\fatSpiderI}
						{#6s\fatSpiderI}
						{};
	}

	\foreach \fatSpiderI in {2,...,#5} {
		\pgfmathtruncatemacro{\fatSpiderIminusOne}{\fatSpiderI - 1};

		\foreach \fatSpiderJ in {1,...,\fatSpiderIminusOne} {
			\edge[#1]{#6c\fatSpiderI}{#6c\fatSpiderJ};
		}
	}

	\foreach \fatSpiderI in {1,...,#5} {
		\foreach \fatSpiderJ in {1,...,#5} {
			\ifthenelse
			{\equal{\fatSpiderI}{\fatSpiderJ}}
			{}
			{\edge[#1]{#6s\fatSpiderI}{#6c\fatSpiderJ};};
		}
	}
}
%---------------------------------------------------------------------------------------------------
%--------------------------------------------------------------------------------------------------------------------------------------------------
